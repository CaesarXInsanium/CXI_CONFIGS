require("../../../../blackboard-ultra");require("../../../../modules/utils/blackboard_ultra/initialize_exam");require("../../../../modules/utils/blackboard_ultra/exams");const fs=require("fs");const path=require("path");describe("initializeExam",(()=>{beforeEach((()=>{jest.clearAllMocks();postLog=jest.fn();hlAlert={init:jest.fn()};trackExamClose=jest.fn();insertExamTools=jest.fn()}));it("Will run through initialize exam procedure",(()=>{document.body.innerHTML=`\n      <bb-assessment-question>Question 1</bb-assessment-question>\n      <bb-assessment-question>Question 2</bb-assessment-question>      \n    `;let firstQuestion=document.querySelectorAll("bb-assessment-question")[0];initializeExam(firstQuestion);expect(chrome.runtime.sendMessage).toBeCalledWith({message:"check_webcam"});expect(trackExamClose).toBeCalled();expect(hlAlert.init).toBeCalled();expect(postLog).toBeCalledWith("Load",firstQuestion);expect(chrome.storage.local.get).toBeCalled()}));it("Will apply exam settings",(()=>{document.body.innerHTML=`\n      <bb-assessment-question>Question 1</bb-assessment-question>\n    `;let firstQuestion=document.querySelectorAll("bb-assessment-question")[0];const storage=JSON.parse(fs.readFileSync(path.resolve(__dirname,"fixtures/example_exam_toggles.json")));chrome.storage.local.get=jest.fn().mockImplementation(((keys,callback)=>{if("exam_toggles"===keys[0])callback(storage)}));global.addEventListener=jest.fn();trackLoseFocus=jest.fn();showAlertOnCopyPasteEvents=jest.fn();postLogOnCopyPasteEvents=jest.fn();disablePrinting=jest.fn();document.addEventListener=jest.fn();initializeExam(firstQuestion);["copy","cut","paste","dragstart","contextmenu"].forEach((eventType=>{expect(document.addEventListener).toBeCalledWith(eventType,disableEvent)}));expect(global.addEventListener).toBeCalledWith("focus",trackLoseFocus);expect(showAlertOnCopyPasteEvents).toBeCalledWith(firstQuestion);expect(postLogOnCopyPasteEvents).toBeCalledWith(firstQuestion);expect(disablePrinting).toBeCalled()}));it.each([["Radio question type","bb-assessment-attempt input[type=radio]"],["Text question type","bb-assessment-attempt input[type=text]"],["Rich Text Editor question type","bb-assessment-attempt bb-rich-text-editor"],["Matching question type","bb-matching-attempt"]])("Adds listeners to %s",((name,questionTypeSelector)=>{document.body.innerHTML=fs.readFileSync(path.resolve(__dirname,"fixtures/all_exam_question_types.html"));const firstQuestion=document.querySelectorAll("bb-assessment-question")[0];let questionElement=document.querySelectorAll(questionTypeSelector)[0];questionElement.addEventListener=jest.fn();initializeExam(firstQuestion);expect(questionElement.addEventListener).toBeCalledWith("click",expect.anything())}));it("insertexamtools does not get called if bypass pin is set",(()=>{document.body.innerHTML=`\n      <bb-assessment-question>Question 1</bb-assessment-question>\n    `;let firstQuestion=document.querySelectorAll("bb-assessment-question")[0];trackLoseFocus=jest.fn();showAlertOnCopyPasteEvents=jest.fn();postLogOnCopyPasteEvents=jest.fn();disablePrinting=jest.fn();const storage=JSON.parse(fs.readFileSync(path.resolve(__dirname,"fixtures/example_exam_toggles.json")));chrome.storage.local.get=jest.fn().mockImplementation(((keys,callback)=>{if("exam_toggles"===keys[0]){callback(storage);return}if("bypass_status"===keys[0]){callback({bypass_status:1});return}void 0}));initializeExam(firstQuestion);expect(insertExamTools).not.toBeCalled()}))}));