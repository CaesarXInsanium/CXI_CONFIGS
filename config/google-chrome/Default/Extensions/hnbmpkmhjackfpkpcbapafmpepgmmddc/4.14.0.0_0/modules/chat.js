const STUDENT_GROUP_ID=2;class Chat{constructor(){this._lmsSchoolId=null;this._examId=null;this._studentId=null;this._lmsStudentName=null;this._lmsStudentEmail=null;this._license=null;this._groupId=STUDENT_GROUP_ID;this._withExamTools=false}init(parameters){this._lmsSchoolId=parameters.lmsSchoolId;this._examId=parameters.examId;this._studentId=parameters.studentId;this._lmsStudentName=parameters.lmsStudentName;this._lmsStudentEmail=parameters.lmsStudentEmail;this._license=parameters.license;if(parameters.groupId)this._groupId=parameters.groupId;this._withExamTools=parameters.withExamTools;this.injectCode();const livechatLink=document.getElementById("hl-livechat-link");if(livechatLink)livechatLink.onclick=()=>{this.maximizeWindow()}}injectCode(){const widgetCode=this._withExamTools?this._getBaseCode()+this._getExamToolsCode():this._getBaseCode();this._injectJS(widgetCode,"hl-livechat-script")}destroy(){this._injectJS(`LiveChatWidget.call('destroy')`,"hl-livechat-script-destroy");document.getElementById("hl-livechat-script").remove();document.getElementById("hl-livechat-script-destroy").remove()}setGroupId(groupId=STUDENT_GROUP_ID){this._groupId=groupId}maximizeWindow(){this._injectJS(`LiveChatWidget.call('maximize')`)}_getBaseCode(){return`\n            window.__lc= window.__lc || {};\n            window.__lc.license = ${this._license};\n            window.__lc.group = ${this._groupId};\n            window.__lc.visitor = {\n                name: '${this._lmsStudentName}',\n                email: '${this._lmsStudentEmail}',\n            };\n            window.__lc.params = [\n                { \n                    name: 'student_id',\n                    value: '${this._studentId}',\n                },\n                { \n                    name: 'exam_id',\n                    value: '${this._examId}',\n                },\n                { \n                    name: 'institution',\n                    value: '${this._lmsSchoolId}',\n                },\n            ];\n            window.LC_API = window.LC_API || {};\n            window.LC_API.on_message = function(data) {\n                if( data.user_type == "visitor" ) {\n                    return false;\n                }\n                \n                const acceptedCommands = [\n                    'launchcam',\n                    'relaunchcam',\n                    'hiderelaunch',\n                    'opensesame',\n                    'nextstep',\n                    'cyclevideo',\n                    'enableguard',\n                    'disableguard',\n                    'showcalculator',\n                    'showcalculatorsci',\n                    'closecalculator',\n                    'closecalculators',\n                    'opencalculator',\n                    'opencalculatorsci',\n                    'opencalculators',\n                    'hidecalculators',\n                    'hidecalculator',\n                    'focuschat',\n                    'cleanslate',\n                    'exitfullscreen',\n                    'showwebcam',\n                    'hidewebcam',\n                    'compresswebcam',\n                    'expandwebcam',\n                ];\n                const command = data.text.substring(1);\n            \n                if (acceptedCommands.includes(command)) {\n                    let eventName = command;\n                    if (eventName.includes('closecalculator')) {\n                        eventName = 'closecalculators';\n                    }\n                    if (eventName.includes('opencalculator')) {\n                        eventName = 'opencalculator';\n                    }\n                    if (eventName.includes('hidecalculator')) {\n                        eventName = 'hidecalculators';\n                    }\n            \n                    const sentEvent = document.createEvent('Event');\n                    sentEvent.initEvent(eventName, true, false);\n                    document.dispatchEvent(sentEvent);\n                }\n            }            \n            ;(function(n,t,c){function i(n){return e._h?e._h.apply(null,n):e._q.push(n)}var e={_q:[],_h:null,_v:"2.0",on:function(){i(["on",c.call(arguments)])},once:function(){i(["once",c.call(arguments)])},off:function(){i(["off",c.call(arguments)])},get:function(){if(!e._h)throw new Error("[LiveChatWidget] You can't use getters before load.");return i(["get",c.call(arguments)])},call:function(){i(["call",c.call(arguments)])},init:function(){var n=t.createElement("script");n.async=!0,n.type="text/javascript",n.src="https://cdn.livechatinc.com/tracking.js",t.head.appendChild(n)}};!n.__lc.asyncInit&&e.init(),n.LiveChatWidget=n.LiveChatWidget||e}(window,document,[].slice));\n        `}_getExamToolsCode(){return`\n            LiveChatWidget.on('ready', function ({ state, customerData }) {\n                let liveChatToggle;\n                const chatContainerWidthThreshold = 84;\n                const chatWidgetContainer = document.getElementById('chat-widget-container');\n                const handleChatStatusChange = (isActive, setZIndex = true) => {\n                    const sentEvent = document.createEvent('Event');\n                    \n                    if (setZIndex) {\n                        chatWidgetContainer.style.zIndex = isActive ?\n                            '99999999999' :\n                            '999999999';\n                    }\n\n                    if (isActive) {\n                        sentEvent.initEvent('chat-started', true, false);\n                        document.dispatchEvent(sentEvent);\n                        return;\n                    }\n                    \n                    sentEvent.initEvent('chat-ended', true, false);\n                    document.dispatchEvent(sentEvent);\n                    LiveChatWidget.call('hide_greeting');\n                };\n                \n                if (state.visibility === 'maximized') {\n                    handleChatStatusChange(true);\n                }\n                \n                if (parseInt(chatWidgetContainer.style.width) >  chatContainerWidthThreshold) {\n                    handleChatStatusChange(true, false);\n                }\n                \n                document.addEventListener('click', (event) => {\n                    liveChatToggle = liveChatToggle || document.getElementById('hl-exam-toolbar-live-chat-toggle');\n                    if (liveChatToggle?.contains(event.target)) {\n                        LiveChatWidget.call('maximize');\n                    }\n                });\n                \n                LiveChatWidget.on('visibility_changed', (data) => {\n                    if (data.visibility === 'maximized') {\n                        handleChatStatusChange(true);\n                        return;\n                    }\n                \n                    handleChatStatusChange(false);\n                });\n                LiveChatWidget.on('greeting_displayed', () => {\n                    handleChatStatusChange(true, false);\n                });\n                LiveChatWidget.on('greeting_hidden', () => {\n                    handleChatStatusChange(false, false);\n                })\n            });\n        `}_injectJS(code,id=null){let script=document.createElement("script");script.type="text/javascript";script.innerHTML=code;if(id)script.id=id;document.body.appendChild(script)}}globalThis.hlChat=new Chat;